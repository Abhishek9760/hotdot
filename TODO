Realtime Voting
---------------

    - Anon can vote (Save in Database, disallow multiple votes from Anon Session).
    - LoggedIn can create Poll (Create form: "Question", "Pitch"==1st vote)
    - Points for creating, editing, activity on created.
    - Discover by tags (Extract tags from Question, allow edit).


    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                          Hi Abc | Logout

                      =================
                      Like Red or Blue?
                      =================


    ----------------------         ----------------------
    None (Login to Create)         Blue is color of ocean.
    ----------------------         ----------------------
            [ X ]                           [ X ]


                    {Create a New Poll}


                                             [Chat Widget]
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


    * Hompage [/]: Recent Polls, Create form, login.
    * Create New Poll [/polls/new]: Question (hash, must be unique), Add Pitch for your side (140 < chars)
    * Poll [/polls/the+question | __guid___]: Render Poll Details: Question,Pitches,Votes,CreateTime,LastEdited
    * Vote [/polls/vote?__guid__=xxx&choice=0]
    * Edit Pitch (After Vote allowed to edit Choosen side)
    
    Realtime component
    ------------------
    * Chat  - Attach to Chat [/topic/__guid__] 
    * Push Votes
    * Push Pitch Edits (and "User now editing" status)

    
Make Hotdot externally available
================================


diff --git a/djangoweb/settings.py b/djangoweb/settings.py
index f9cba67..fe0c8ac 100644
--- a/djangoweb/settings.py
+++ b/djangoweb/settings.py
@@ -2,7 +2,7 @@ import os
 PROJECT_PATH = os.path.abspath(os.path.dirname(__file__))
 STATIC_PORT = 8000
 STOMP_PORT = 9999
-INTERFACE = "localhost"
+INTERFACE = "10.0.1.6"
 
 DEBUG = True
 TEMPLATE_DEBUG = DEBUG
diff --git a/realtime/restq.py b/realtime/restq.py
index df61bc5..0d036ce 100644
--- a/realtime/restq.py
+++ b/realtime/restq.py
@@ -13,7 +13,7 @@ except ImportError:
         print "No suitable json library found, see INSTALL.txt"
 
 class RestQ(object):
-    def __init__(self, port=5000, rqaddr='http://localhost', handlers=None):
+    def __init__(self, port=5000, rqaddr='http://10.0.1.6', handlers=None):
         if handlers is None:
             self.handlers = ['connect', 'disconnect', 'subscribe', 'unsubscribe', 'send']
         else:
diff --git a/server.py b/server.py
index 875ab49..990aa71 100644
--- a/server.py
+++ b/server.py
@@ -10,7 +10,7 @@ from morbid import StompFactory
 # Config
 from orbited import logging, config
 logging.setup(config.map)
-INTERFACE = "localhost"
+INTERFACE = "10.0.1.6"
 #Runtime config, is there a cleaner way?:
 config.map["[access]"]={(INTERFACE, 9999):"*"}
 STATIC_PORT = 8000

